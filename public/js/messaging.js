// Generated by CoffeeScript 1.4.0
(function() {
  var $, Communique, MessagingForceReload, communique_cache, empty_function, focused, loading, message_audio, messages_panel, overlay, play_message_notification, post_data, sidebar, socket,
    __hasProp = {}.hasOwnProperty;

  socket = null;

  message_audio = null;

  play_message_notification = function() {
    message_audio.currentTime = 0;
    return message_audio.play();
  };

  focused = true;

  window.addEventListener('focus', function() {
    return focused = true;
  });

  window.addEventListener('blur', function() {
    return focused = false;
  });

  $ = function(id) {
    return document.getElementById(id);
  };

  overlay = null;

  loading = null;

  sidebar = null;

  messages_panel = null;

  communique_cache = null;

  empty_function = function() {
    return null;
  };

  post_data = function(dict) {
    var arr, k, v;
    arr = ["csrf_token=" + (encode_uri_component(document.body.getAttribute('csrf-token')))];
    for (k in dict) {
      if (!__hasProp.call(dict, k)) continue;
      v = dict[k];
      arr.push("" + (encode_uri_component(k)) + "=" + (encode_uri_component(v)));
    }
    return arr.join('&');
  };

  Communique = (function() {

    function Communique(data) {
      var _ref;
      communique_cache[data.id] = this;
      this.unread = data.unread;
      this.id = data.id;
      this.users = data.users;
      this.messages = data.messages;
      this.more_messages = (_ref = data.more_messages) != null ? _ref : true;
      this.dom = document.createElement('div');
      this.dom.setAttribute('data-id', data.id);
      this.dom.classList.add('communique');
      if (data.unread) {
        this.dom.classList.add('unread');
      }
      this.dom.textContent = data.users.join(', ');
      if (sidebar.childNodes[0]) {
        sidebar.insertBefore(this.dom, sidebar.childNodes[0]);
      } else {
        sidebar.appendChild(this.dom);
      }
    }

    Communique.prototype.loadMessages = function(cb) {
      var op,
        _this = this;
      if (cb == null) {
        cb = empty_function;
      }
      if (!this.more_messages) {
        return cb();
      }
      op = new XMLHttpRequest;
      op.open('get', "/messaging/" + this.id + "?onlymessages=1&offset=" + this.messages.length);
      loading.show();
      op.onload = function() {
        var resp;
        resp = JSON.parse(op.responseText);
        _this.more_mesages = resp.more_messages;
        _this.messages = resp.messages.concat(_this.messages);
        cb();
        loading.hide();
        return overlay.hide();
      };
      return op.send(null);
    };

    Communique.prototype.loadMoreMessages = function() {
      return this.loadMessages();
    };

    return Communique;

  })();

  Communique.load_new = function(id, cb) {
    var op;
    if (cb == null) {
      cb = empty_function;
    }
    op = new XMLHttpRequest;
    op.open('get', "/messaging/" + id, true);
    op.onload = function() {
      cb(new Communique(JSON.parse(op.responseText)));
      return loading.hide();
    };
    op.send(null);
    return loading.show();
  };

  this.MessagingLoadCommunique = function(id, cb) {
    var func;
    if (cb == null) {
      cb = empty_function;
    }
    func = function() {
      return Communique.load_new(id, cb);
    };
    if (communique_cache) {
      return func();
    } else {
      return MessagingForceReload(cb);
    }
  };

  this.MessagingToggle = function() {
    messages_panel.classList.toggle('active');
    messages_opener.textContent = messages_panel.classList.contains('active') ? "Close" : "Messages";
    messages_opener.classList.remove('attn');
    if (messages_panel.classList.contains('active') && !communique_cache) {
      return MessagingForceReload();
    }
  };

  MessagingForceReload = function(cb) {
    var op;
    if (cb == null) {
      cb = empty_function;
    }
    communique_cache = {};
    loading.show();
    op = new XMLHttpRequest;
    op.open('get', '/messaging/list', true);
    op.onload = function() {
      var communique, _i, _len, _ref;
      _ref = JSON.parse(op.responseText);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        communique = _ref[_i];
        new Communique(communique);
      }
      return loading.hide();
    };
    return op.send(null);
  };

  window.addEventListener('load', function() {
    var channel, messages_opener;
    message_audio = new Audio;
    message_audio.src = "/sounds/message.wav";
    message_audio.load();
    channel = new goog.appengine.Channel(document.body.getAttribute('data-channel-token'));
    socket = channel.open();
    socket.onmessage = function(evt) {
      var msg;
      msg = JSON.parse(evt.data);
      if (msg.action === 'new_message') {
        if (!focused) {
          play_message_notification();
        }
        if (messages_panel.classList.contains('active')) {
          return null;
        } else {
          return messages_opener.classList.add('attn');
        }
      }
    };
    socket.onerror = socket.onclose = function() {
      return null;
    };
    messages_panel = $('messages-panel');
    messages_opener = messages_panel.querySelector('.messages-opener');
    messages_opener.addEventListener('click', function() {
      return MessagingToggle();
    }, false);
    overlay = messages_panel.querySelector('.overlay');
    loading = messages_panel.querySelector('.loading');
    sidebar = messages_panel.querySelector('.sidebar');
    overlay.show = function() {
      return overlay.style.display = 'block';
    };
    overlay.hide = function() {
      return overlay.style.display = 'none';
    };
    loading.show = function() {
      overlay.show();
      return loading.style.display = 'block';
    };
    return loading.hide = function() {
      return loading.style.display = 'none';
    };
  }, false);

}).call(this);
