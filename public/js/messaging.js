// Generated by CoffeeScript 1.4.0
(function() {
  var $, Communique, MessagingForceReload, communique_cache, empty_function, focused, last, loading, message_audio, message_group_template, messages, messages_opener, messages_panel, messaging_title, notifications, notify_new_message, overlay, play_message_notification, post_data, selected_communique, sidebar, socket, ta, _ref,
    __hasProp = {}.hasOwnProperty,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  socket = null;

  message_audio = null;

  play_message_notification = function() {
    message_audio.currentTime = 0;
    return message_audio.play();
  };

  notifications = (_ref = this.webkitNotifications) != null ? _ref : this.notifications;

  notify_new_message = function(msg) {
    play_message_notification();
    if (notifications == null) {
      return;
    }
    if (notifications.checkPermission() === 0) {
      return notifications.createNotification("/users/" + msg.user + "/thumbnail", "Message from '" + msg.nickname + "'", msg.contents).show();
    }
  };

  focused = true;

  window.addEventListener('focus', function() {
    return focused = true;
  });

  window.addEventListener('blur', function() {
    return focused = false;
  });

  $ = function(id) {
    return document.getElementById(id);
  };

  overlay = null;

  loading = null;

  sidebar = null;

  messages_panel = null;

  messages_opener = null;

  selected_communique = null;

  messages = null;

  ta = null;

  message_group_template = null;

  messaging_title = null;

  communique_cache = null;

  empty_function = function() {
    return null;
  };

  last = function(arr) {
    return arr[arr.length - 1];
  };

  post_data = function(dict) {
    var arr, k, v;
    arr = ["csrf_token=" + (encodeURIComponent(document.body.getAttribute('data-csrf-token')))];
    for (k in dict) {
      if (!__hasProp.call(dict, k)) continue;
      v = dict[k];
      arr.push("" + (encodeURIComponent(k)) + "=" + (encodeURIComponent(v)));
    }
    return arr.join('&');
  };

  Communique = (function() {

    function Communique(data) {
      this.select = __bind(this.select, this);

      this.renderMessages = __bind(this.renderMessages, this);

      var title, users, _ref1;
      communique_cache[data.id] = this;
      this.unread = data.unread;
      this.id = data.id;
      this.users = data.users;
      this.messages = data.messages;
      this.more_messages = (_ref1 = data.more_messages) != null ? _ref1 : true;
      this.title = data.title;
      this.user_map = data.user_map;
      this.dom = document.createElement('div');
      this.dom.setAttribute('data-id', data.id);
      this.dom.classList.add('communique');
      if (data.unread) {
        this.dom.classList.add('unread');
      }
      title = document.createElement('div');
      title.textContent = this.title;
      title.classList.add('title');
      this.dom.appendChild(title);
      users = document.createElement('div');
      users.classList.add('users');
      users.textContent = data.users.join(', ');
      this.dom.appendChild(users);
      this.dom.addEventListener('click', this.select, false);
      if (sidebar.childNodes[0]) {
        sidebar.insertBefore(this.dom, sidebar.childNodes[0]);
      } else {
        sidebar.appendChild(this.dom);
      }
    }

    Communique.prototype.newMessage = function(msg) {
      if (sidebar.childNodes[0]) {
        sidebar.insertBefore(this.dom, sidebar.childNodes[0]);
      } else {
        sidebar.appendChild(this.dom);
      }
      if (selected_communique === this) {
        this.render_message(msg);
        return this.read();
      } else {
        return this.dom.classList.add('unread');
      }
    };

    Communique.prototype.loadMessages = function(cb) {
      var op,
        _this = this;
      if (cb == null) {
        cb = empty_function;
      }
      if (!this.more_messages) {
        return cb();
      }
      op = new XMLHttpRequest;
      op.open('get', "/messaging/" + this.id + "?onlymessages=1&offset=" + (this.messages ? this.messages.length : 0));
      loading.show();
      op.onload = function() {
        var resp;
        resp = JSON.parse(op.responseText);
        _this.more_mesages = resp.more_messages;
        if (_this.messages) {
          _this.messages = resp.messages.concat(_this.messages);
        } else {
          _this.messages = resp.messages;
        }
        cb();
        return loading.hide();
      };
      return op.send(null);
    };

    Communique.prototype.read = function() {
      var xhr;
      if (!unread) {
        return;
      }
      this.dom.classList.remove('unread');
      xhr = new XMLHttpRequest;
      xhr.open('post', "/messaging/" + this.id + "/read_by", true);
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      return xhr.send(post_data());
    };

    Communique.prototype.post = function(msg) {
      var xhr;
      this.render_message({
        user: parseInt(document.body.getAttribute('data-current-user')),
        contents: msg
      });
      xhr = new XMLHttpRequest;
      xhr.open('post', "/messaging/" + this.id + "/post", true);
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      return xhr.send(post_data({
        contents: msg
      }));
    };

    Communique.prototype.render_message = function(msg) {
      var div, group, pic;
      div = document.createElement('div');
      div.className = 'message';
      div.textContent = msg.contents;
      if (this.last_rendered_group_user === msg.user) {
        group = last(messages.children);
      } else {
        this.last_rendered_group_user = msg.user;
        group = document.createElement('div');
        group.className = 'message-group';
        group.innerHTML = message_group_template.innerHTML;
        pic = group.querySelector('.pic');
        pic.href = "/users/" + msg.user;
        pic.style.backgroundImage = "url('/users/" + msg.user + "/thumbnail')";
        group.querySelector('.name').textContent = this.user_map[msg.user];
        messages.appendChild(group);
      }
      div.style.top = group.style.minHeight;
      group.insertBefore(div, group.querySelector('.clearer'));
      if (group.style.minHeight) {
        return group.style.minHeight = "" + (parseFloat(group.style.minHeight) + div.offsetHeight) + "px";
      } else {
        return group.style.minHeight = "" + div.offsetHeight + "px";
      }
    };

    Communique.prototype.renderMessages = function() {
      var button, msg, _i, _len, _ref1,
        _this = this;
      this.last_rendered_group_user = null;
      messages.innerHTML = "";
      if (this.more_mesages) {
        button = document.createElement("input");
        button.type = "button";
        button.value = "Load More Messages";
        button.className = "load-more-messages-button";
        button.addEventListener('click', function() {
          return _this.loadMessages(_this.renderMessages);
        }, false);
        messages.appendChild(button);
      }
      _ref1 = this.messages;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        msg = _ref1[_i];
        this.render_message(msg);
      }
      overlay.hide();
      return ta.focus();
    };

    Communique.prototype.select = function() {
      if (selected_communique === this) {
        return;
      }
      if (selected_communique) {
        selected_communique.dom.classList.remove('selected');
      }
      this.dom.classList.add('selected');
      this.read();
      messaging_title.textContent = this.title;
      selected_communique = this;
      ta.value = "";
      if (this.messages) {
        return this.renderMessages();
      } else {
        return this.loadMessages(this.renderMessages);
      }
    };

    return Communique;

  })();

  Communique.load_new = function(id, cb) {
    var op;
    if (cb == null) {
      cb = empty_function;
    }
    op = new XMLHttpRequest;
    op.open('get', "/messaging/" + id, true);
    op.onload = function() {
      cb(new Communique(JSON.parse(op.responseText)));
      return loading.hide();
    };
    op.send(null);
    return loading.show();
  };

  this.MessagingLoadCommunique = function(id, cb) {
    var func;
    if (cb == null) {
      cb = empty_function;
    }
    func = function() {
      return Communique.load_new(id, cb);
    };
    if (communique_cache) {
      return func();
    } else {
      return MessagingForceReload(cb);
    }
  };

  this.MessagingToggle = function() {
    messages_panel.classList.toggle('active');
    messages_opener.textContent = messages_panel.classList.contains('active') ? "Close" : "Messages";
    document.body.style.overflow = messages_panel.classList.contains('active') ? "hidden" : "";
    if ((notifications != null) && notifications.checkPermission() !== 0 && messages_panel.classList.contains('active')) {
      notifications.requestPermission();
    }
    messages_opener.classList.remove('attn');
    if (messages_panel.classList.contains('active') && !communique_cache) {
      return MessagingForceReload();
    }
  };

  MessagingForceReload = function(cb) {
    var op;
    if (cb == null) {
      cb = empty_function;
    }
    communique_cache = {};
    loading.show();
    op = new XMLHttpRequest;
    op.open('get', '/messaging/list', true);
    op.onload = function() {
      var communique, _i, _len, _ref1;
      _ref1 = JSON.parse(op.responseText);
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        communique = _ref1[_i];
        new Communique(communique);
      }
      return loading.hide();
    };
    return op.send(null);
  };

  window.addEventListener('load', function() {
    var channel;
    message_audio = new Audio;
    message_audio.src = "/sounds/message.wav";
    message_audio.load();
    channel = new goog.appengine.Channel(document.body.getAttribute('data-channel-token'));
    socket = channel.open();
    socket.onmessage = function(evt) {
      var com, msg;
      msg = JSON.parse(evt.data);
      if (msg.action === 'new_message') {
        if (!focused) {
          notify_new_message(msg);
        }
        if (messages_panel.classList.contains('active')) {
          com = communique_cache[msg.communique];
          if (com) {
            return com.newMessage(msg);
          }
        } else {
          return messages_opener.classList.add('attn');
        }
      }
    };
    socket.onerror = socket.onclose = function() {
      return null;
    };
    messages_panel = $('messages-panel');
    messages_opener = messages_panel.querySelector('.messages-opener');
    messages_opener.addEventListener('click', function() {
      return MessagingToggle();
    }, false);
    overlay = messages_panel.querySelector('.overlay');
    loading = messages_panel.querySelector('.loading');
    sidebar = messages_panel.querySelector('.sidebar');
    messages = messages_panel.querySelector('.messages');
    message_group_template = messages_panel.querySelector('.template[data-name=message-group]');
    messaging_title = messages_panel.querySelector('.title');
    ta = messages_panel.querySelector('textarea');
    ta.addEventListener('keydown', function(evt) {
      if (!evt.shiftKey && evt.keyCode === 13) {
        evt.preventDefault();
        if (selected_communique) {
          selected_communique.post(ta.value);
        }
        return ta.value = "";
      }
    }, false);
    overlay.show = function() {
      return overlay.style.display = 'block';
    };
    overlay.hide = function() {
      return overlay.style.display = 'none';
    };
    loading.show = function() {
      overlay.show();
      return loading.style.display = 'block';
    };
    return loading.hide = function() {
      return loading.style.display = 'none';
    };
  }, false);

}).call(this);
