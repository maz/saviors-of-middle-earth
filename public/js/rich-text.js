// Generated by CoffeeScript 1.4.0
(function() {
  var FONTS, RichTextEditor, join_arrays, map,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  FONTS = ["Arial", "Comic Sans MS", "Courier New", "Georiga", "Impact", "Times New Roman", "Trebuchet", "Verdana"];

  map = function(func, iterable) {
    var arr, elem, _i, _len;
    arr = [];
    for (_i = 0, _len = iterable.length; _i < _len; _i++) {
      elem = iterable[_i];
      arr.push(func(elem));
    }
    return arr;
  };

  join_arrays = function(lsts) {
    var arr, lst, _i, _len;
    arr = [];
    for (_i = 0, _len = lsts.length; _i < _len; _i++) {
      lst = lsts[_i];
      arr = arr.concat(lst);
    }
    return arr;
  };

  this.StyleRuns = function(dom) {
    var arr, style;
    if (dom.tagName) {
      if (dom.tagName === "DIV") {
        return [
          {
            newline: 1
          }
        ].concat(join_arrays(map(StyleRuns, dom.childNodes)));
      } else {
        style = window.getComputedStyle(dom);
        arr = [
          {
            "font-family": style.fontFamily,
            "font-size": style.fontSize,
            "font-weight": style.fontWeight,
            "text-decoration": style.textDecoration,
            "font-style": style.fontStyle
          }
        ].concat(join_arrays(map(StyleRuns, dom.childNodes)));
        arr.push({
          end: 1
        });
        return arr;
      }
    } else {
      return [
        {
          text: dom.textContent.replace(/[\t\r\n ]+/g, " ")
        }
      ];
    }
  };

  RichTextEditor = (function() {

    function RichTextEditor(field) {
      this.queryEverything = __bind(this.queryEverything, this);

      var div, elem, font, html, opt, queryEverythingLater, _i, _j, _len, _len1, _ref,
        _this = this;
      this.container = field;
      html = field.innerHTML;
      field.innerHTML = "";
      this.toolbar = document.createElement('div');
      this.toolbar.className = 'toolbar';
      this.toolbar.tabIndex = 0;
      this.fontName = document.createElement('select');
      for (_i = 0, _len = FONTS.length; _i < _len; _i++) {
        font = FONTS[_i];
        opt = document.createElement('option');
        opt.value = font;
        opt.textContent = font;
        this.fontName.appendChild(opt);
      }
      this.toolbar.appendChild(this.fontName);
      this.fontName.addEventListener('change', function() {
        return _this.exec('fontName', FONTS[_this.fontName.selectedIndex]);
      }, false);
      this.bold = document.createElement('input');
      this.bold.type = 'checkbox';
      this.bold.addEventListener('change', function() {
        return _this.exec('bold', _this.bold.checked);
      }, false);
      this.toolbar.appendChild(this.bold);
      this.toolbar.appendChild(document.createTextNode('B'));
      this.italic = document.createElement('input');
      this.italic.type = 'checkbox';
      this.italic.addEventListener('change', function() {
        return _this.exec('italic', _this.italic.checked);
      }, false);
      this.toolbar.appendChild(this.italic);
      this.toolbar.appendChild(document.createTextNode('I'));
      this.underline = document.createElement('input');
      this.underline.type = 'checkbox';
      this.underline.addEventListener('change', function() {
        return _this.exec('underline', _this.underline.checked);
      }, false);
      this.toolbar.appendChild(this.underline);
      this.toolbar.appendChild(document.createTextNode('U'));
      this.container.appendChild(this.toolbar);
      _ref = this.toolbar.children;
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        elem = _ref[_j];
        elem.addEventListener('focus', function() {
          return _this.doc.body.focus();
        }, false);
      }
      this.toolbar.addEventListener('focus', function() {
        return _this.doc.body.focus();
      }, false);
      this.iframe = document.createElement('iframe');
      div = document.createElement('div');
      div.className = 'container';
      field.appendChild(div);
      div.appendChild(this.iframe);
      this.iframe.src = "/html/blank.html";
      queryEverythingLater = function() {
        return setTimeout(_this.queryEverything, 0);
      };
      this.iframe.addEventListener('load', function() {
        _this.win = _this.iframe.contentWindow;
        _this.doc = _this.win.document;
        _this.doc.body.innerHTML = html;
        _this.doc.designMode = 'on';
        _this.exec('styleWithCSS', true);
        queryEverythingLater();
        _this.doc.body.addEventListener('keydown', queryEverythingLater, false);
        return _this.doc.body.addEventListener('mouseup', queryEverythingLater, false);
      }, false);
    }

    RichTextEditor.prototype.exec = function(cmd, arg) {
      return this.doc.execCommand(cmd, null, arg);
    };

    RichTextEditor.prototype.queryEverything = function() {
      this.fontName.selectedIndex = FONTS.indexOf(this.doc.queryCommandValue('fontName').replace(/'/g, ""));
      this.bold.checked = this.doc.queryCommandState('bold');
      this.italic.checked = this.doc.queryCommandState('italic');
      return this.underline.checked = this.doc.queryCommandState('underline');
    };

    return RichTextEditor;

  })();

  window.addEventListener('load', function() {
    var field, _i, _len, _ref, _results;
    _ref = document.querySelectorAll('.rich-text');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      field = _ref[_i];
      _results.push(new RichTextEditor(field));
    }
    return _results;
  }, false);

}).call(this);
